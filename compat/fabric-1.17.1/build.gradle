/*
 * EvergreenHUD - A mod to improve on your heads-up-display.
 * Copyright (C) isXander [2019 - 2021]
 *
 * This program comes with ABSOLUTELY NO WARRANTY
 * This is free software, and you are welcome to redistribute it
 * under the certain conditions that can be found here
 * https://www.gnu.org/licenses/lgpl-2.1.en.html
 *
 * If you have any questions or concerns, please create
 * an issue on the github page that can be found here
 * https://github.com/isXander/EvergreenHUD
 *
 * If you have a private concern, please contact
 * isXander @ business.isxander@gmail.com
 */

import com.modrinth.minotaur.TaskModrinthUpload

plugins {
    id 'fabric-loom' version '0.10.55'
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_16

repositories {
    maven { url = "https://maven.fabricmc.net" }
}

dependencies {
    embed (project(":core")) {
        exclude module: 'kotlin-stdlib-jdk8'
        exclude module: 'kotlin-reflect'
        exclude module: 'elementa-1.8.9-forge'
        exclude module: 'minecraft'
        exclude module: 'yarn'
    }

    include modImplementation ('gg.essential:elementa-1.17.1-fabric:385') {
        exclude module: 'fabric-loader'
    }
    include implementation ('com.github.Chocohead:Fabric-ASM:v2.3')

    minecraft 'com.mojang:minecraft:1.17.1'
    mappings 'net.fabricmc:yarn:1.17.1+build.14:v2'

    modImplementation 'net.fabricmc:fabric-loader:0.11.6'
    modImplementation 'net.fabricmc.fabric-api:fabric-api:0.37.0+1.17'
    modImplementation 'net.fabricmc:fabric-language-kotlin:1.6.5+kotlin.1.5.31'
}

processResources {
    inputs.property 'mod_id', mod_id
    inputs.property 'mod_version', project.version
    inputs.property 'mod_name', mod_name
    inputs.property 'mod_description', mod_description

    filesMatching(['fabric.mod.json', 'bundle.project.json']) {
        expand(
                'mod_id': mod_id,
                'mod_version': project.version,
                'mod_name': mod_name,
                'mod_description': mod_description,
        )
    }
}

jar {
    archiveClassifier.set 'dev'
}

shadowJar {
    archiveClassifier.set("shadow")
}

remapJar {
    dependsOn shadowJar
    input = shadowJar.archivePath

    archiveBaseName.set(shadowJar.archiveBaseName.get())
    archiveVersion.set(shadowJar.archiveVersion.get())
    archiveClassifier.set("")
}

compileKotlin {
    kotlinOptions {
        jvmTarget = '16'
    }
}

tasks.withType(TaskModrinthUpload) {
    uploadFile = remapJar

    addGameVersion('1.17.1')
    addLoader('fabric')
}
