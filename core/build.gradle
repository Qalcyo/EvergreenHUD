apply plugin: 'java-library'

buildConfig {
    className('EvergreenInfo')
    packageName('dev.isxander.evergreenhud')
    useKotlinOutput()

    buildConfigField('String', 'NAME', "\"${mod_name}\"")
    buildConfigField('String', 'ID', "\"${mod_id}\"")

    buildConfigField('Int', 'VERSION_MAJOR', version_major)
    buildConfigField('Int', 'VERSION_MINOR', version_minor)
    buildConfigField('Int', 'VERSION_PATCH', version_patch)
    buildConfigField('Int?', 'VERSION_PRERELEASE', (prerelease ? version_prerelease : 'null'))
    buildConfigField('String', 'VERSION_FULL', "\"${project.version}\"")
    buildConfigField('String', 'REVISION', "\"${project.gitHash == null ? '???????' : project.gitHash}\"")

    buildConfigField('dev.isxander.evergreenhud.repo.ReleaseChannel', 'CHANNEL', "ReleaseChannel.${!version_prerelease.trim().isEmpty() ? 'BETA' : 'RELEASE'}")
}

repositories {
    maven { url = 'https://libraries.minecraft.net' }
}

dependencies {
    api 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.5.21'
    api 'org.jetbrains.kotlin:kotlin-reflect:1.5.21'

    api 'com.typesafe:config:1.4.1'

    api 'club.chachy.kotlin-forge-api:forge-event-dsl:0.3.1'
    api ('com.github.KevinPriv:KEventBus:86cf2e023e') {
        exclude module: 'kotlin-stdlib-jdk8'
    }

    api 'org.reflections:reflections:0.9.12'
    api ('com.squareup.okhttp3:okhttp:4.9.1') {
        exclude module: 'kotlin-stdlib'
        exclude module: 'kotlin-stdlib-common'
    }

    // there is no api jar for Elementa or UniversalCraft so
    // depend on whatever version and exclude all dependencies
    // then in the other modules depend on them properly.
    // gross but I don't see any other way
    api ('gg.essential:elementa-1.8.9-forge:359+next') {
        exclude module: 'kotlin-stdlib-jdk8'
        exclude module: 'kotlin-reflect'
        exclude module: 'minecraft'
        exclude module: 'yarn'
        exclude module: 'fabric-loader'
        exclude module: 'fabric-api'
        exclude module: 'forge'
    }
}

jar {
    enabled = true
}

