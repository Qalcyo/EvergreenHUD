import com.modrinth.minotaur.TaskModrinthUpload

plugins {
    id 'fabric-loom' version '0.9-SNAPSHOT'
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_16

dependencies {
    embed (project(":core")) {
        exclude module: 'kotlin-stdlib-jdk8'
        exclude module: 'kotlin-reflect'
        exclude module: 'Elementa'
        exclude module: 'UniversalCraft'
        exclude module: 'minecraft'
        exclude module: 'yarn'
    }

    include modImplementation ('gg.essential:elementa-1.17-fabric:359+next') {
        exclude module: 'fabric-loader'
    }

    minecraft 'com.mojang:minecraft:1.17.1'
    mappings 'net.fabricmc:yarn:1.17.1+build.14:v2'

    modImplementation 'net.fabricmc:fabric-loader:0.11.6'
    modImplementation 'net.fabricmc.fabric-api:fabric-api:0.37.0+1.17'
    modImplementation 'net.fabricmc:fabric-language-kotlin:1.6.4+kotlin.1.5.30'
}

processResources {
    inputs.property 'mod_id', mod_id
    inputs.property 'mod_version', project.version
    inputs.property 'mod_name', mod_name
    inputs.property 'mod_description', mod_description

    filesMatching(['fabric.mod.json', 'bundle.project.json']) {
        expand(
                'mod_id': mod_id,
                'mod_version': project.version,
                'mod_name': mod_name,
                'mod_description': mod_description
        )
    }
}

shadowJar {
    archiveClassifier.set 'shadow'
}

// use shadow as input jar for remap
remapJar {
    dependsOn shadowJar
    input.fileValue shadowJar.outputs.files.singleFile

    archiveBaseName.set shadowJar.archiveBaseName.get()
    archiveVersion.set shadowJar.archiveVersion.get()
    archiveClassifier.set ''
}

compileKotlin {
    kotlinOptions {
        jvmTarget = '16'
    }
}

tasks.withType(TaskModrinthUpload) {
    uploadFile = remapJar

    addGameVersion('1.17.1')
    addLoader('fabric')
}